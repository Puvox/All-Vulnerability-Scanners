<?php

class Functions {


	
	public function basedir(){
		return dirname(__DIR__);
	}

	public function scanners_dir(){
		return $this->basedir().'/scanners/';
	}


	public function temp_bin(){
		return dirname(__DIR__).'/temp_bin/uploads/';
	}




	public function validate_zip($zip)
	{
		$mime = mime_content_type($zip);
		$allowed_mimes = ['application/zip', 'application/octet-stream', 'application/x-zip-compressed', 'multipart/x-zip'];
		if(in_array($mime, $allowed_mimes ) ) {
			return true;
		}
		return false;
	}



	public function all_scanners($type, $lang)
	{
		$new_array = [];
		if($type=="supported")
		{
			$dirs= glob( $this->scanners_dir().'/using-yes/'.basename($lang).'/*', GLOB_ONLYDIR);
			foreach($dirs as $each){
				$slug= basename($each);
				preg_match("/(.*?)\=(.*?)\=(.*)/", $slug, $matches); 
				$company= $matches[1];
				$name	= $matches[2];
				$date	= $matches[3];
				$new_array[]= [
					'company'=>$company, 'name'=>$name, 'last_updated'=>$date
				];
			}
		}
		if($type=="unsupported")
		{
			$dirs= glob( $this->scanners_dir().'/using-no/'.basename($lang).'/*', GLOB_ONLYDIR);
			foreach($dirs as $each){
				$slug= basename($each);
				preg_match("/(.*?)\=(.*?)\=(.*)/", $slug, $matches);
				$company= $matches[1];  
				$name	= $matches[2];
				$reason	= $matches[3];
				$new_array[]= [
					'company'=>$company, 'name'=>$name, 'reason'=>$reason
				];
			}
		}
		return $new_array;
	}









	public function unzip($subject, $path=__dir__){
		global $subject;
		if (function_exists('zip_open')){
			if (!is_resource($zip = zip_open($path.'/'.$subject)))
				return ($subject . ' could not be read for extracting');

			while ($zip_entry = zip_read($zip)){
				zip_entry_open($zip, $zip_entry);
				if (substr(zip_entry_name($zip_entry), -1) == '/') {
					$zdir = substr(zip_entry_name($zip_entry), 0, -1);
					if (file_exists($path.'/'.$zdir))
						return (htmlspecialchars($zdir) . ' exists!');
					mkdir($path.'/'.$zdir);
				}
				else {
					if (file_exists($path.'/'.zip_entry_name($zip_entry)))
						return (htmlspecialchars($path.'/'.zip_entry_name($zip_entry)) . ' exists!');

					$fopen = fopen($path.'/'.zip_entry_name($zip_entry), 'w');
					$ze_fs = zip_entry_filesize($zip_entry);
					fwrite($fopen, zip_entry_read($zip_entry, $ze_fs), $ze_fs);
				}
				zip_entry_close($zip_entry);
			}
			zip_close($zip);
			return;
		}
		if (class_exists('ZipArchive')){
			$zip = new ZipArchive();
			if ($zip->open($path.'/'.$subject) !== true)
				return ($subject . ' could not be read for extracting');
			$zip->extractTo($path);
			$zip->close();
			return;
		}
		if (strpos(PHP_OS, 'WIN') === false && @shell_exec('unzip')){
			shell_exec('unzip ' . escapeshellarg($path.'/'.$subject));
			return;
		}
	}












}